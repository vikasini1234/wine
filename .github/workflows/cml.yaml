name: model-wine-quality
on: [push]
permissions:
    id-token: write
    contents: write            
    security-events: write  
jobs:
  run:
    runs-on: ubuntu-latest
    # optionally use a convenient Ubuntu LTS + DVC + CML image
    container: docker://dvcorg/cml-py3:latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: iterative/setup-cml@v1
     

      - name: cml_run
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Your ML workflow goes here
          pip install -r requirements.txt
          pip install xmlrunner  # Install xmlrunner here
          python train.py
      - name: Run tests with xmlrunner
        run: |
          # Ensure the test-reports directory exists
          mkdir -p test-reports
          # Run tests using xmlrunner
          python -m unittest test_model.py 

      - name: Generate readable test report
        run: |
          # Combine all XML test reports into one markdown file (This step may need adjustments based on your preferences)
          echo "## Test Results\n" > test_results.md
          shopt -s nullglob
          for file in test-reports/*.xml; do
             if [[ -f "$file" ]]; then
               echo "\`\`\`xml" >> test_results.md
               cat "$file" >> test_results.md
               echo "\`\`\`\n" >> test_results.md
             else
               echo "No test report files found." >> test_results.md
             fi
          done

      - name: Publish test results
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cml comment create --publish test_results.md
          
          echo "MODEL METRICS"
          cat metrics.txt

          echo "Model metrics:" >> report.md
          cat metrics.txt >> report.md
          echo "Data viz">>report.md
          echo "Data viz" >> report.md
          echo '![](./feature_importance.png)' >> report.md
          echo '![](./residuals.png)' >> report.md
          cml comment create --publish report.md
