name: model-wine-quality
on: [push]
permissions:
    id-token: write
    contents: write            
    security-events: write  
jobs:
  run:
    runs-on: ubuntu-latest
    # optionally use a convenient Ubuntu LTS + DVC + CML image
    container: docker://dvcorg/cml-py3:latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: iterative/setup-cml@v1
      - name: cml_run
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Your ML workflow goes here
          pip install -r requirements.txt
          python train.py

          echo "MODEL METRICS"
          cat metrics.txt

          echo "Model metrics:" >> report.md
          cat metrics.txt >> report.md
          echo "Data viz">>report.md
          echo "Data viz" >> report.md
          echo '![](./feature_importance.png)' >> report.md
          echo '![](./residuals.png)' >> report.md
          cml comment create --publish report.md

           curl -X POST \
           -H 'Content-type: application/json' \
            -H 'auth-token: 70b24d42-e9d5-4e0f-b9bf-71ede05b5eaa' \
             --data '{"forceCancelPreviousTesting":true,"storedValues":{"storedValueName1":"Value"}}' \
              https://api.testrigor.com/api/v1/apps/JYRstAsNMeEXk95mA/retest
            
            sleep 10
            
            while true
            do
              echo " "
              echo "==================================="
              echo " Checking TestRigor retest"
              echo "==================================="
              response=$(curl -i -o - -s -X GET 'https://api.testrigor.com/api/v1/apps/JYRstAsNMeEXk95mA/status' -H 'auth-token: 70b24d42-e9d5-4e0f-b9bf-71ede05b5eaa' -H 'Accept: application/json')
              code=$(echo "$response" | grep HTTP |  awk '{print $2}')
              body=$(echo "$response" | grep status)
              echo "Status code: " $code
              echo "Response: " $body
              case $code in
                4*|5*)
                  # 400 or 500 errors
                  echo "Error calling API"
                  exit 1
                  ;;
                200)
                  # 200: successfully finished
                  echo "Test finished successfully"
                  exit 0
                  ;;
                227|228)
                  # 227: New - 228: In progress
                  echo "Test is not finished yet"
                  ;;
                230)
                  # 230: Failed
                  echo "Test finished but failed"
                  exit 1
                  ;;
                *)
                  echo "Unknown status"
                  exit 1
                esac
              sleep 10
            done
